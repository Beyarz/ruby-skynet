var search_data = {"index":{"searchIndex":["download","helper","download","upload","skynet","upload","default_options()","default_options()","download_file()","http_post_header()","strip_prefix()","upload_file()","examples","gemfile","gemfile.lock","license","readme","block"],"longSearchIndex":["download","helper","helper::download","helper::upload","skynet","upload","helper::download::default_options()","helper::upload::default_options()","download#download_file()","upload#http_post_header()","skynet::strip_prefix()","upload#upload_file()","","","","","",""],"info":[["Download","","Download.html","","<p>Module for handling inbound requests\n"],["Helper","","Helper.html","","<p>Class with general settings\n"],["Helper::Download","","Helper/Download.html","","<p>Module for keeping download settings\n"],["Helper::Upload","","Helper/Upload.html","","<p>Module for keeping upload settings\n"],["Skynet","","Skynet.html","","<p>The entrypoint for the SDK\n"],["Upload","","Upload.html","","<p>Module for handling outbound requests\n"],["default_options","Helper::Download","Helper/Download.html#method-c-default_options","()","<p>Default options for the download module\n"],["default_options","Helper::Upload","Helper/Upload.html#method-c-default_options","()","<p>Default options for the upload module\n"],["download_file","Download","Download.html#method-i-download_file","(file_name, skylink, options = {}, stream = true)","<p>Download file from the skynet portal file_name &amp; skylink is required, the rest is optional since …\n"],["http_post_header","Upload","Upload.html#method-i-http_post_header","(data = {})","<p>Default headers provided for uploading files, any argument provided is merged with the default values …\n"],["strip_prefix","Skynet","Skynet.html#method-c-strip_prefix","(str)","<p>Removes the Skynet::URI_SKYNET_PREFIX constant from string\n"],["upload_file","Upload","Upload.html#method-i-upload_file","(file_path, options = {})","<p>Uploads file to the skynet, file_path is required but options are optional since default values are provided …\n"],["EXAMPLES","","EXAMPLES_md.html","","<p>Examples\n<p>Upload\n\n<pre>require &#39;skynet&#39;\n\n# Upload to another portal &amp; change filename\nskylink = Skynet.upload_file(&#39;development.png&#39;, ...</pre>\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org” git_source(:github) {|repo_name| “ …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  ast (2.4.0)\n  diff-lcs (1.3)\n  io-console (0.5.6)\n  irb (1.2.3) ...</pre>\n"],["LICENSE","","LICENSE.html","","<p>MIT License\n<p>Copyright © 2020 Beyar\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README_md.html","","<p>Skynet gem\n<p>Library for integrating Skynet into Ruby applications\n<p>Docs\n"],["block","","block_md.html","","<p>Todo\n<p>Write documentation (rdoc)\n Note: <code>rdoc -o docs</code>\n<p>Write tests (rspec)\n"]]}}